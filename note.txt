onmouseover="this.src='${product.imgSrcSub}'"
onmouseout="this.src='${product.imgSrc}'"

const forms2 = document.querySelectorAll(".form");

// Loop through login form and signup form
forms2.forEach((form) => {
   // Email
   const eField = form.querySelector(".email");
   const eInput = eField.querySelector("input");

   // Password
   const pField = form.querySelector(".password");
   const pInput = pField.querySelector("input");

   form.onsubmit = (e) => {
      e.preventDefault(); //prevent form from submitting

      // Check email field
      if (eInput.value == "") {
         //if email is empty
         eField.classList.add("shake", "error");
      } else {
         checkEmail(); // calling checkEmail function
      }

      // Check password field
      if (pInput.value == "") {
         //if password is empty
         pField.classList.add("shake", "error");
         let errorTxt = pField.querySelector(".error-txt");
         errorTxt.innerText = "Password is required";
      } else if (pInput.value.length < 8) {
         //if password is less than 8 characters
         pField.classList.add("shake", "error");
         let errorTxt = pField.querySelector(".error-txt");
         errorTxt.innerText = "Password must be at least 8 characters long";
      } else if (!pInput.value.match(/[A-Z]/)) {
         //if password does not contain an uppercase letter
         pField.classList.add("shake", "error");
         let errorTxt = pField.querySelector(".error-txt");
         errorTxt.innerText = "Password must contain at least one uppercase letter";
      }

      setTimeout(() => {
         // remove shake class after 500ms
         eField.classList.remove("shake");
         pField.classList.remove("shake");
      }, 500);

      // Check email field on input keyup
      eInput.onkeyup = () => {
         checkEmail(); // calling checkEmail function
      };

      // create a function for checkEmail
      function checkEmail() {
         let pattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/; //pattern for validate email
         if (!eInput.value.match(pattern)) {
            //if pattern not matched with user entered value
            eField.classList.add("error");
            let errorTxt = eField.querySelector(".error-txt");
            //if email is not empty then show Enter a valid email address until email valid else show Email can't be blank
            eInput.value != ""
               ? (errorTxt.innerText = "Enter a valid email address")
               : (errorTxt.innerText = "Email is required");
         } else {
            eField.classList.remove("error");
         }
      }

      // Check password field on input keyup
      pInput.onkeyup = () => {
         if (pInput.value == "") {
            // if password is empty
            pField.classList.add("error");
         } else {
            pField.classList.remove("error");
         }
      };

      // what to do after user filled up proper details
      // if error class not contains in eField and pField then user has entered proper details
      if (!eField.classList.contains("error") && !pField.classList.contains("error")) {
         window.location.href = "#"; //remove that # and put that url where you want to submit the form data
         // window.location.href = form.getAttribute("action"); //redirecting user to the specified url which is inside action attribute of form tag
         console.log("form submitted");
      }
   };
});



 const noResultsDiv = document.createElement("div");
      noResultsDiv.classList.add("no-results");
      noResultsDiv.textContent = noResultsMessage;
      noResultsDiv.style.position = "absolute";
      noResultsDiv.style.left = "50%";
      noResultsDiv.style.transform = "translateX(-50%)";
      productList.appendChild(noResultsDiv);


  /*========== Colors Light Theme ========== */
   /*Color mode HSL(hue, saturation, lightness)*/
   --first-color: rgb(255, 181, 102);
   --button-color: rgb(43, 43, 43);
   --button-color-alt: rgba(71, 71, 71, 0.899);
   --title-color: rgb(38, 38, 38);
   --text-color: rgb(89, 89, 89);
   --text-color-light: rgb(140, 140, 140);
   --body-color: rgb(252, 252, 252);
   --container-color: rgb(255, 255, 255);
   --border-color: rgb(240, 240, 240);


    // Initialize Zooming.js and add an event listener for the big image
   const zooming = new Zooming();

   const bigImage = document.querySelector(".big-image-1");

   bigImage.style.cursor = "zoom-in";

   bigImage.addEventListener("click", () => {
      zooming.open(bigImage);
   });